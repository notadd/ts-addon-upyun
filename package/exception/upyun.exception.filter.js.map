{"version":3,"sources":["exception/upyun.exception.filter.ts"],"names":[],"mappings":";;;;;;;;AAAA,2CAAsF;AActF,IAAa,oBAAoB,GAAjC;IAEI,KAAK,CAAC,SAAwB,EAAE,OAAsB;QAClD,MAAM,MAAM,GAAG,SAAS,CAAC,SAAS,EAAE,CAAC;QACrC,MAAM,OAAO,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;QACxC,MAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,WAAW,EAAE,CAAC;QACtD,QAAQ;aACH,MAAM,CAAC,MAAM,CAAC;aACd,IAAI,CAAC;YACF,IAAI,EAAE,MAAM;YACZ,OAAO;SACV,CAAC,CAAC;IACX,CAAC;CACJ,CAAA;AAbY,oBAAoB;IADhC,cAAK,CAAC,sBAAa,CAAC;GACR,oBAAoB,CAahC;AAbY,oDAAoB","file":"upyun.exception.filter.js","sourcesContent":["import { Catch, ExceptionFilter, HttpException, ArgumentsHost } from \"@nestjs/common\";\n\n/*错误码表\n  200: 成功\n  400：缺少参数或者参数不正确\n  401：指定空间配置不存在\n  402：restful请求错误\n  403：数据库错误\n  404：文件不存在\n  405：图片处理错误\n  406: 文件处理错误\n  500：意外错误\n*/\n@Catch(HttpException)\nexport class UpyunExceptionFilter implements ExceptionFilter {\n\n    catch(exception: HttpException, context: ArgumentsHost) {\n        const status = exception.getStatus();\n        const message = exception.getResponse();\n        const response = context.switchToHttp().getResponse();\n        response\n            .status(status)\n            .json({\n                code: status,\n                message\n            });\n    }\n}\n"]}