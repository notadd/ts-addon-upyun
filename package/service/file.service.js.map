{"version":3,"sources":["service/file.service.ts"],"names":[],"mappings":"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","file":"file.service.js","sourcesContent":["\nimport { Injectable, HttpException, Inject } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { UploadProcessBody } from \"../interface/file/upload.process.body\";\nimport { Audio } from \"../model/audio.entity\";\nimport { Bucket } from \"../model/bucket.entity\";\nimport { Document } from \"../model/document.entity\";\nimport { File } from \"../model/file.entity\";\nimport { Image } from \"../model/image.entity\";\nimport { Video } from \"../model/video.entity\";\nimport { AuthUtil } from \"../util/auth.util\";\nimport { KindUtil } from \"../util/kind.util\";\nimport { ProcessStringUtil } from \"../util/process.string.util\";\nimport { RestfulUtil } from \"../util/restful.util\";\n\n/* 图片服务组件，包含了上传时创建policy对象、预保存图片\n   回调通知时，后保存、后删除\n   查找图片、创建访问图片的url等功能\n*/\n@Injectable()\nexport class FileService {\n\n    constructor(\n        @Inject(AuthUtil) private readonly authUtil: AuthUtil,\n        @Inject(KindUtil) private readonly kindUtil: KindUtil,\n        @Inject(RestfulUtil) private readonly restfulUtil: RestfulUtil,\n        @Inject(ProcessStringUtil) private readonly processStringUtil: ProcessStringUtil,\n        @InjectRepository(File) private readonly fileRepository: Repository<File>,\n        @InjectRepository(Image) private readonly imageRepository: Repository<Image>,\n        @InjectRepository(Audio) private readonly audioRepository: Repository<Audio>,\n        @InjectRepository(Video) private readonly videoRepository: Repository<Video>,\n        @InjectRepository(Bucket) private readonly bucketRepository: Repository<Bucket>) {\n    }\n\n    async makePolicy(data: any, policy: any, bucket: Bucket, body: UploadProcessBody, file: File | Image | Video | Audio | Document): Promise<void> {\n        const { md5, contentSecret, contentName } = body;\n        // 设置各种上传参数\n        if (contentSecret) {\n            policy[\"content-secret\"] = contentSecret;\n        }\n        policy.bucket = bucket.name;\n        policy[\"ext-param\"] += bucket.name;\n        data.url += \"/\" + bucket.name;\n        // 文件类型以文件扩展名确定，如果不存在扩展名为file\n        const type: string = file.type || \"\";\n        const kind = this.kindUtil.getKind(type);\n        // 这里原图的save_key不保存它，在回调中直接删除\n        policy[\"save-key\"] += \"/\" + bucket.directory + \"/\" + md5 + \"_\" + (+new Date()) + \".\" + type;\n        policy.expiration = Math.floor((+new Date()) / 1000) + bucket.requestExpire;\n        policy.date = new Date(+new Date() + bucket.requestExpire * 1000).toUTCString();\n        // 根据配置，设置预处理参数，只有一个预处理任务\n        if (kind === \"image\") {\n            const obj = {\n                \"name\": \"thumb\",\n                \"x-gmkerl-thumb\": \"\",\n                \"save_as\": \"\",\n                \"notify_url\": policy[\"notify-url\"]\n            };\n            const format = bucket.imageConfig.format || \"raw\";\n            // 原图不处理\n            if (format === \"raw\") {\n                // 保存为原图，为了防止没有预处理字符串时不进行预处理任务，加上了/scale/100\n                obj[\"x-gmkerl-thumb\"] = this.processStringUtil.makeImageProcessString(bucket, body.imagePreProcessInfo) + \"/scale/100\";\n                // 这里将预处理的文件名设置为刚才保存的文件名，在回调中根据文件名来更新它，保存为原图时，\n                obj.save_as = \"/\" + bucket.directory + \"/\" + file.name + \".\" + file.type;\n                // apps字段应为json字符串\n                policy.apps = [obj];\n            } else if (format === \"webp_damage\") {\n                // 保存为有损webp\n                obj[\"x-gmkerl-thumb\"] = this.processStringUtil.makeImageProcessString(bucket, body.imagePreProcessInfo) + \"/format/webp/strip/true\";\n                obj.save_as = \"/\" + bucket.directory + \"/\" + file.name + \".\" + \"webp\";\n                // apps字段应为json字符串\n                policy.apps = [obj];\n            } else if (format === \"webp_undamage\") {\n                // 保存为无损webp\n                obj[\"x-gmkerl-thumb\"] = this.processStringUtil.makeImageProcessString(bucket, body.imagePreProcessInfo) + \"/format/webp/lossless/true/strip/true\";\n                obj.save_as = \"/\" + bucket.directory + \"/\" + file.name + \".\" + \"webp\";\n                policy.apps = [obj];\n            } else {\n                throw new Error(\"格式配置不正确，应该不能发生\");\n            }\n        } else {\n            // 暂时不支持\n        }\n        // 设置表单policy字段\n        data.form.policy = Buffer.from(JSON.stringify(policy)).toString(\"base64\");\n        // 生成签名，上传签名需要policy参数\n        const method = data.method;\n        data.form.authorization = await this.authUtil.getBodyAuth(bucket, method, policy);\n        return;\n    }\n\n    async preSaveFile(bucket: Bucket, body: UploadProcessBody): Promise<File | Image | Video | Audio | Document> {\n        const { md5, contentName, contentSecret, tags } = body;\n        const type = contentName.substr(contentName.lastIndexOf(\".\") + 1).toLowerCase();\n        const kind = this.kindUtil.getKind(type);\n        if (kind === \"image\") {\n            // 创建图片\n            const image = new Image();\n            image.rawName = contentName;\n            // 这个文件名会设置到预处理参数apps的save_as中去，而不是上传参数的save_key中，那个文件名不保存，在回调中直接删除\n            image.name = md5 + \"_\" + (+new Date());\n            image.md5 = md5;\n            image.tags = tags;\n            image.type = type;\n            image.status = \"pre\";\n            image.contentSecret = contentSecret || undefined;\n            image.bucket = bucket;\n            try {\n                await this.imageRepository.save(image);\n            } catch (err) {\n                throw new HttpException(\"图片预保存失败\", 403);\n            }\n            return image;\n        } else {\n            // 还不支持\n        }\n    }\n\n    /* 预处理回调通知验签成功，且响应码为200时，后保存图片 */\n    async postSaveTask(bucket: Bucket, name: string, body: any, kind: string): Promise<void> {\n        if (kind === \"image\") {\n            const image: Image = await this.imageRepository.findOne({ name, bucketId: bucket.id, status: \"pre\" });\n            // 预保存图片不存在时，正常返回，服务器错误\n            if (!image) {\n                return;\n            }\n            image.width = body.imginfo.width,\n                image.height = body.imginfo.height,\n                image.type = body.imginfo.type.toLowerCase(),\n                image.frames = body.imginfo.frames,\n                image.status = \"post\";\n            // 从云存储获取预处理文件的md5与处理后大小\n            const { fileSize, fileMd5 } = await this.restfulUtil.getFileInfo(bucket, image);\n            image.size = fileSize;\n            image.md5 = fileMd5;\n            try {\n\n                await this.imageRepository.save(image);\n            } catch (err) {\n                throw new HttpException(\"更新预保存图片失败\", 403);\n            }\n        } else {\n            throw new Error(\"kind不正确\");\n        }\n        return;\n    }\n\n    // 创建url\n    async makeUrl(bucket: Bucket, file: File | Image | Video | Audio | Document, body: any, kind: string): Promise<string> {\n        let url: string = \"/\" + bucket.directory + \"/\" + file.name + \".\" + file.type;\n        url += \"!\";\n        if (file.contentSecret) {\n            url += file.contentSecret;\n        }\n        if (kind === \"image\") {\n            // 拼接处理字符串，使用请求体参数\n            url += this.processStringUtil.makeImageProcessString(bucket, body.imagePostProcessInfo);\n        }\n        // 如果是私有空间需要拼接token查询字符串\n        if (bucket.publicOrPrivate === \"private\") {\n            url += \"?_upt=\" + await this.authUtil.getToken(bucket, url);\n        }\n        url = bucket.baseUrl.concat(url);\n        return url;\n    }\n\n    async getAll(data: any, bucketName: string) {\n        const bucket: Bucket | undefined = await this.bucketRepository.createQueryBuilder(\"bucket\")\n            .where({ name: bucketName })\n            .leftJoinAndSelect(\"bucket.files\", \"files\")\n            .leftJoinAndSelect(\"bucket.images\", \"image\")\n            .leftJoinAndSelect(\"bucket.audios\", \"audio\")\n            .leftJoinAndSelect(\"bucket.videos\", \"video\")\n            .leftJoinAndSelect(\"bucket.documents\", \"document\")\n            .getOne();\n        if (!bucket) {\n            throw new HttpException(\"空间\" + bucketName + \"不存在\", 401);\n        }\n        data.baseUrl = bucket.baseUrl;\n        data.files = bucket.files;\n        data.images = bucket.images;\n        data.audios = bucket.audios;\n        data.videos = bucket.videos;\n        data.documents = bucket.documents;\n        const addUrl = value => {\n            value.url = \"/\" + bucket.directory + \"/\" + value.name + \".\" + value.type;\n            if (value.contentSecret) {\n                value.url += \"!\" + value.contentSecret;\n            }\n            if (bucket.publicOrPrivate === \"private\") {\n                value.url += \"?_upt=\" + this.authUtil.getToken(bucket, value.url);\n            }\n        };\n        data.files.forEach(addUrl);\n        data.images.forEach(addUrl);\n        data.audios.forEach(addUrl);\n        data.videos.forEach(addUrl);\n        data.documents.forEach(addUrl);\n    }\n}\n"]}