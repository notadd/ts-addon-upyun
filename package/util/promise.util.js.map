{"version":3,"sources":["util/promise.util.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AACA,2CAA0D;AAI1D,IAAa,WAAW,GAAxB;IAIU,EAAE,CAAC,EAA4B;;YACjC,IAAI,EAAiB,CAAC;YACtB,MAAM,IAAI,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBAC9B,EAAE,GAAG,GAAG,CAAC;YACb,CAAC,CAAC,CAAC;YACH,IAAI,EAAE,EAAE;gBACJ,MAAM,EAAE,CAAC;aACZ;QACL,CAAC;KAAA;CACJ,CAAA;AAbY,WAAW;IADvB,kBAAS,EAAE;GACC,WAAW,CAavB;AAbY,kCAAW","file":"promise.util.js","sourcesContent":["\nimport { Component, HttpException } from \"@nestjs/common\";\n\n/* Promise工具 */\n@Component()\nexport class PromiseUtil {\n    /* 保证Promise中抛出的异常可以被try-catch块正常接受到\n       直接在.catch方法中抛出异常会出现意外状况\n    */\n    async do(fn: (resolve, reject) => any) {\n        let ex: HttpException;\n        await new Promise(fn).catch(err => {\n            ex = err;\n        });\n        if (ex) {\n            throw ex;\n        }\n    }\n}\n"]}