{"version":3,"sources":["model/bucket.entity.ts"],"names":[],"mappings":"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","file":"bucket.entity.js","sourcesContent":["import { Column, Entity, OneToMany, OneToOne, PrimaryColumn } from \"typeorm\";\nimport { AudioConfig } from \"./audio.config.entity\";\nimport { Audio } from \"./audio.entity\";\nimport { Document } from \"./document.entity\";\nimport { File } from \"./file.entity\";\nimport { ImageConfig } from \"./image.config.entity\";\nimport { Image } from \"./image.entity\";\nimport { VideoConfig } from \"./video.config.entity\";\nimport { Video } from \"./video.entity\";\n\n/* 后台配置实体类 */\n@Entity({\n    name: \"bucket\",\n})\nexport class Bucket {\n\n    // 主键，需要设置插入，1默认为公有空间配置，2默认为私有空间配置\n    @PrimaryColumn()\n    id: number;\n\n    // 公有还是私有空间，值为public、private\n    @Column({\n        length: 20,\n        nullable: false,\n        unique: true,\n    })\n    publicOrPrivate: string;\n\n    // 空间名\n    @Column({\n        length: 50,\n        nullable: false,\n        unique: true,\n    })\n    name: string;\n\n    // 操作员名\n    @Column({\n        length: 50,\n        nullable: false,\n    })\n    operator: string;\n\n    // 操作员密码的md5\n    @Column({\n        length: 50,\n        nullable: false,\n    })\n    password: string;\n\n    // 此空间下所有文件都存储于这个目录里,与虚拟目录无关\n    @Column({\n        length: 20,\n        nullable: false,\n    })\n    directory: string;\n\n    // 请求过期时间，单位秒\n    @Column({\n        nullable: false,\n    })\n    requestExpire: number;\n\n    // 基本url\n    @Column({\n        length: 50,\n        nullable: false,\n        unique: true,\n    })\n    baseUrl: string;\n\n    // token密钥\n    @Column({\n        length: 250,\n        nullable: true,\n    })\n    tokenSecretKey: string;\n\n    // token过期时间，单位秒\n    @Column({\n        nullable: true,\n    })\n    tokenExpire: number;\n\n    /*\n    这里lazy:false的意思不是每个Bucket查询出来的时候就会包含imageConfig\n    它的意思只是在于获取的属性是否是Promise，而要查询出来的Bucket包含imageConfig，必须使用find({relation:xxxx})\n    */\n    @OneToOne(\n        type => ImageConfig,\n        imageConfig => imageConfig.bucket,\n        {\n            cascadeInsert: true,\n            cascadeUpdate: true,\n            cascadeRemove: true,\n            lazy: false,\n        },\n    )\n    imageConfig: ImageConfig;\n\n    @OneToOne(\n        type => AudioConfig,\n        audioConfig => audioConfig.bucket,\n        {\n            cascadeInsert: true,\n            cascadeUpdate: true,\n            cascadeRemove: true,\n            lazy: false,\n        },\n    )\n    audioConfig: AudioConfig;\n\n    @OneToOne(\n        type => VideoConfig,\n        videoConfig => videoConfig.bucket,\n        {\n            cascadeInsert: true,\n            cascadeUpdate: true,\n            cascadeRemove: true,\n            lazy: false,\n        },\n    )\n    videoConfig: VideoConfig;\n\n    @OneToMany(\n        type => File,\n        file => file.bucket,\n        {\n            cascadeInsert: true,\n            cascadeUpdate: true,\n            lazy: true,\n        },\n    )\n    files: Promise<Array<File>>;\n\n    @OneToMany(\n        type => Image,\n        image => image.bucket,\n        {\n            cascadeInsert: true,\n            cascadeUpdate: true,\n            lazy: true,\n        },\n    )\n    images: Promise<Array<Image>>;\n\n    @OneToMany(\n        type => Audio,\n        audio => audio.bucket,\n        {\n            cascadeInsert: true,\n            cascadeUpdate: true,\n            lazy: true,\n        },\n    )\n    audios: Promise<Array<Audio>>;\n\n    @OneToMany(\n        type => Video,\n        video => video.bucket,\n        {\n            cascadeInsert: true,\n            cascadeUpdate: true,\n            lazy: true,\n        },\n    )\n    videos: Promise<Array<Video>>;\n\n    @OneToMany(\n        type => Document,\n        document => document.bucket,\n        {\n            cascadeInsert: true,\n            cascadeUpdate: true,\n            lazy: true,\n        },\n    )\n    documents: Promise<Array<Document>>;\n}\n"]}