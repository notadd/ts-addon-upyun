{"version":3,"sources":["resolver/config.resolver.ts"],"names":[],"mappings":"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","file":"config.resolver.js","sourcesContent":["\nimport { HttpException, Inject, UseInterceptors } from \"@nestjs/common\";\nimport { Mutation, Query, Resolver } from \"@nestjs/graphql\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Request } from \"express\";\nimport { Repository } from \"typeorm\";\nimport { ExceptionInterceptor } from \"../interceptor/exception.interceptor\";\nimport { AudioFormatConfig } from \"../interface/config/audio.format.config\";\nimport { BucketConfig } from \"../interface/config/bucket.config\";\nimport { EnableImageWatermarkConfig } from \"../interface/config/enable.image.watermark.config\";\nimport { ImageFormatConfig } from \"../interface/config/image.format.config\";\nimport { ImageWatermarkConfig } from \"../interface/config/image.watermark.config\";\nimport { VideoFormatConfig } from \"../interface/config/video.format.config\";\nimport { Data } from \"../interface/data\";\nimport { Bucket } from \"../model/bucket.entity\";\nimport { ConfigService } from \"../service/config.service\";\nimport { FileUtil } from \"../util/file.util\";\nimport { KindUtil } from \"../util/kind.util\";\nimport { RestfulUtil } from \"../util/restful.util\";\n\n/* 空间基本配置的resolver */\n@Resolver(\"Config\")\n@UseInterceptors(ExceptionInterceptor)\nexport class ConfigResolver {\n\n    private readonly gravity: Set<string> = new Set([ \"northwest\", \"north\", \"northeast\", \"west\", \"center\", \"east\", \"southwest\", \"south\", \"southeast\" ]);\n\n    constructor(\n        @Inject(FileUtil) private readonly fileUtil: FileUtil,\n        @Inject(KindUtil) private readonly kindUtil: KindUtil,\n        @Inject(RestfulUtil) private readonly restfulUtil: RestfulUtil,\n        @Inject(ConfigService) private readonly configService: ConfigService,\n        @InjectRepository(Bucket) private readonly bucketRepository: Repository<Bucket>\n    ) {\n    }\n\n    /* 配置空间基本信息 */\n    @Mutation(\"bucket\")\n    async bucket(req: Request, body: BucketConfig): Promise<Data> {\n        const { isPublic, name, operator, password, directory, baseUrl, requestExpire } = body;\n        if (isPublic === undefined || !name || !operator || !password || !directory || !baseUrl || !requestExpire) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        if (isPublic !== true && isPublic !== false && isPublic !== \"true\" && isPublic !== \"false\") {\n            throw new HttpException(\"isPublic参数不正确\", 400);\n        }\n        if (!Number.isInteger(body.requestExpire)) {\n            throw new HttpException(\"请求超时参数为非整数\", 400);\n        } else if (body.requestExpire < 0) {\n            throw new HttpException(\"请求超时参数小于0\", 400);\n        } else if (body.requestExpire > 1800) {\n            throw new HttpException(\"请求超时参数大于1800\", 400);\n        }\n        if (!isPublic) {\n            if (!Number.isInteger(body.tokenExpire)) {\n                throw new HttpException(\"token超时参数为非整数\", 400);\n            } else if (body.tokenExpire < 0) {\n                throw new HttpException(\"token超时参数小于0\", 400);\n            } else if (body.tokenExpire > 1800) {\n                throw new HttpException(\"token超时参数大于1800\", 400);\n            }\n        }\n        // 保存配置，如果已存在就更新它\n        const bucket: Bucket = await this.configService.saveBucketConfig(body);\n        await this.restfulUtil.createDirectory(bucket);\n        return { code: 200, message: \"空间配置成功\" };\n    }\n\n    /* 图片保存格式配置，目前公有空间、私有空间采用一个保存格式，会在两个配置信息中各保存一次 */\n    @Mutation(\"imageFormat\")\n    async imageFormat(req: Request, body: ImageFormatConfig): Promise<Data> {\n        const format = body.format;\n        if (format === undefined || format.length === 0) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        // 保存格式\n        await this.configService.saveImageFormatConfig(body);\n        return { code: 200, message: \"图片保存格式配置成功\" };\n    }\n\n    @Mutation(\"enableImageWatermark\")\n    async enableImageWatermark(req: Request, body: EnableImageWatermarkConfig): Promise<Data> {\n        // 这里在schema中定义为枚举值，接受到参数为string\n        const { enable } = body;\n        if (enable === undefined || enable === undefined) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        // enable参数错误\n        if (enable !== true && enable !== false) {\n            throw new HttpException(\"参数错误\", 400);\n        }\n        await this.configService.saveEnableImageWatermarkConfig(body);\n        return { code: 200, message: \"启用图片水印成功\" };\n    }\n\n    /* 保存水印配置，目前两个空间采用同一个图片水印，忽略文字水印、忽略多水印\n       水印图片必须与被加水印图片在同一个服务名下，所以需要在两个空间下各保存一次\n       为了向前端提供统一接口，这里采用将水印图片上传到服务器，由服务发起restful上传请求的方式\n       如果客户端上传，客户端调用会比较繁杂\n    */\n    @Mutation(\"imageWatermark\")\n    async imageWatermarkConfig(req: Request, body: ImageWatermarkConfig): Promise<Data> {\n        const tempPath = __dirname + \"/\" + body.name;\n        try {\n            const { name, base64, gravity, opacity, x, y, ws } = body;\n            await this.fileUtil.write(tempPath, Buffer.from(base64, \"base64\"));\n            const obj: any = {};\n            const file: any = {};\n            obj.x = x;\n            obj.y = y;\n            obj.opacity = opacity;\n            obj.ws = ws;\n            obj.gravity = gravity;\n            file.name = name;\n            file.path = tempPath;\n            if (!this.gravity.has(obj.gravity)) {\n                throw new HttpException(\"不允许的水印图片位置\", 400);\n            }\n            if (!Number.isInteger(obj.x)) {\n                throw new HttpException(\"x偏移不是整数\", 400);\n            }\n            if (!Number.isInteger(obj.y)) {\n                throw new HttpException(\"y偏移不是整数\", 400);\n            }\n            if (!Number.isInteger(obj.opacity)) {\n                throw new HttpException(\"透明度不是整数\", 400);\n            } else if (obj.opacity <= 0) {\n                throw new HttpException(\"透明度不大于0\", 400);\n            } else if (obj.opacity > 100) {\n                throw new HttpException(\"透明度大于100\", 400);\n            } else {\n            }\n            if (!Number.isInteger(obj.ws)) {\n                throw new HttpException(\"短边自适应比例不是整数\", 400);\n            } else if (obj.ws <= 0) {\n                throw new HttpException(\"短边自适应比例不大于0\", 400);\n            } else {\n                // 暂定短边自适应比例可以大于100\n            }\n            if (!this.kindUtil.isImage(file.name.substr(file.name.lastIndexOf(\".\") + 1))) {\n                throw new HttpException(\"不允许的水印图片类型\", 400);\n            }\n            // 保存后台水印配置\n            await this.configService.saveImageWatermarkConfig(file, obj);\n        } catch (err) {\n            throw err;\n        } finally {\n            await this.fileUtil.delete(tempPath);\n        }\n        return { code: 200, message: \"图片水印配置成功\" };\n    }\n\n    /* 音频保存格式配置，目前公有空间、私有空间采用一个保存格式，会在两个配置信息中各保存一次 */\n    @Mutation(\"audioFormat\")\n    async audioFormat(req: Request, body: AudioFormatConfig): Promise<Data> {\n        const format = body.format;\n        if (!format) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        // 保存公有空间格式\n        await this.configService.saveAudioFormatConfig(body);\n        return { code: 200, message: \"音频保存格式配置成功\" };\n    }\n\n    /* 视频保存配置，目前公有空间、私有空间采用一个保存格式，会在两个配置信息中各保存一次 */\n    @Mutation(\"videoFormat\")\n    async videoFormat(req: Request, body: VideoFormatConfig): Promise<Data> {\n        const { format, resolution } = body;\n        if (!format || !resolution) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        // 保存公有空间格式\n        await this.configService.saveVideoFormatConfig(body);\n        return { code: 200, message: \"视频保存格式配置成功\" };\n    }\n\n    /* 获取所有空间信息字段 */\n    @Query(\"buckets\")\n    async buckets(): Promise<Data & { buckets: Array<Bucket> }> {\n        const buckets: Array<Bucket> = await this.bucketRepository.createQueryBuilder(\"bucket\")\n            .select([ \"bucket.id\", \"bucket.publicOrPrivate\", \"bucket.name\" ])\n            .getMany();\n        if (buckets.length !== 2) {\n            throw new HttpException(\"空间配置不存在\", 401);\n        }\n        return { code: 200, message: \"获取空间配置成功\", buckets };\n    }\n}\n"]}